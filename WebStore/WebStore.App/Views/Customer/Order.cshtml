@model WebStore.App.Models.OrderViewModel

@{
    ViewData["Title"] = "Details";
}

<h1>Place Order at @Model.Seller.Name Store</h1>

<div>
    <h4>@Model.Buyer.FullName</h4>
    <hr />
    @*<dl class="row">
        <dt class = "col-sm-2">
            Order @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd class = "col-sm-10">
            Order #@Html.DisplayFor(model => model.Id)
        </dd>
        <dt class = "col-sm-2">
            Store @Html.DisplayNameFor(model => model.Seller.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Seller.Name)
        </dd>
    </dl>*@
</div>
<div>
    @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
    <a asp-action="Index">Back to List</a>
</div>

<form asp-action="Order" asp-route-storeId="@Model.Seller.Id" id="order-form">
    @foreach(var kvp in Model.Products)
    {
    <div class="form-group">
        <label asp-for="@kvp.Key" class="control-label">@kvp.Key : $@Model.Seller.Prices[kvp.Key]</label>
        <input name="@kvp.Key" type="number" min="0" max="@((int)(100/Model.Seller.Prices[kvp.Key]))" placeholder="@kvp.Value" class="form-control" />
        <span asp-validation-for="@kvp.Key" class="text-danger"></span>
    </div>
    }
    <button type="submit" class="btn btn-primary">Place Order</button>
</form>